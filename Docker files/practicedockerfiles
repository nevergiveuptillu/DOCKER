# 1) using present path

FROM amazoncorretto:11
RUN curl https://referenceapplicationskhaja.s3.us-west-2.amazonaws.com/spring-petclinic-2.4.2.jar -o spring-petclinic-2.4.2.jar
EXPOSE 8080
CMD ["java","-jar","spring-petclinic-2.4.2.jar"]

# 2) using alpine image
FROM alpine:3.18.3
RUN openjdk11
RUN wget https://referenceapplicationskhaja.s3.us-west-2.amazonaws.com/spring-petclinic-2.4.2.jar
EXPOSE 8080
CMD [ "java","-jar","spring-petclinic-2.4.2.jar" ]                 

# 3) Label

FROM amazoncorretto:12
LABEL author="shiva"
LABEL director="somanath"
LABEL cameraman="thiru"
RUN curl https://referenceapplicationskhaja.s3.us-west-2.amazonaws.com/spring-petclinic-2.4.2.jar     -o spring-petclinic-2.4.2.jar
EXPOSE 8080
CMD ["java","-jar","spring-petclinic-2.4.2.jar"]


# 4) alpine and label

 FROM alpine
 LABEL author = "shivasomanath"
 RUN apk add openjdk11
 RUN wget https://referenceapplicationskhaja.s3.us-west-2.amazonaws.com/spring-petclinic-2.4.2.jar  
 EXPOSE 8080
 CMD ["java","-jar","spring-petclinic-2.4.2.jar"]

# 5) Using Add command

 FROM amazoncorretto:11
 LABEL author = "shivs"
 ADD https://referenceapplicationskhaja.s3.us-west-2.amazonaws.com/spring-petclinic-2.4.2.jar /root/spc/spring-petclinic-2.4.2.jar
 EXPOSE 8080
 CMD ["java","-jar","/root/spc/spring-petclinic-2.4.2.jar"]

# 6) COPY

  FROM amazoncorretto:11
  LABEL author = "shivs"
  COPY spring-petclinic-2.4.2.jar /root/spc/spring-petclinic-2.4.2.jar
  EXPOSE 8080
  CMD ["java","-jar","/root/spc/spring-petclinic-2.4.2.jar"]            

# 7)Nop installation (docker container exec -it --name nop /bin/bash)  

  # WORKDIR: Setsthe/working/path The absolute or relative path to use as the working directory. Will be created if it does not exist.

   FROM bitnami/dotnet-sdk:7.0.400-debian-11-r15
   LABEL author = "shiva"
   LABEL director = "somanath"
   LABEL camera = "thiru"
   ADD https://github.com/nopSolutions/nopCommerce/releases/download/release-4.60.2/nopCommerce_4.60.2_NoSource_linux_x64.zip /somanath/
   WORKDIR /somanath
   RUN apt update && apt install unzip -y && \
       unzip nopCommerce_4.60.2_NoSource_linux_x64.zip && \
       mkdir /somanath/bin && mkdir /somanath/logs
  EXPOSE 5000
  CMD ["dotnet","Nop.Web.dll","--urls","http://0.0.0.0:5000"]


# 8)scrrath used for hardware system write dockefile junifer 

# using env varible

# docker container exec Nop printenv

# docker image build -t nop:1.0 -f Dockerfile .

# https://andrewlock.net/5-ways-to-set-the-urls-for-an-aspnetcore-app/  set env varible asp.net

# 9) understanding folder structure ENV Set the environment variable key to the value value.


FROM bitnami/dotnet-sdk:7.0.400-debian-11-r15
LABEL author = "shiva"
LABEL director = "somanath"
LABEL camera = "thiru"
ADD https://github.com/nopSolutions/nopCommerce/releases/download/release-4.60.2/nopCommerce_4.60.2_NoSource_linux_x64.zip /somanath/
WORKDIR /somanath
RUN apt update && apt install unzip -y && \
    unzip nopCommerce_4.60.2_NoSource_linux_x64.zip && \
    mkdir /somanath/bin && mkdir /somanath/logs
EXPOSE 5000
ENV ASPNETCORE_URLS="http://0.0.0.0:5000"
CMD ["dotnet","Nop.Web.dll"]

# 10) ARG used for varible in name = value Define a variable with an optional default value that users can override at build-time when using docker build.Since Docker 1.9


FROM bitnami/dotnet-sdk:7.0.400-debian-11-r15
LABEL author = "shiva" director = "somanath" camera = "thiru"
ARG DOWNLOAD_URL=https://github.com/nopSolutions/nopCommerce/releases/download/release-4.60.2/nopCommerce_4.60.2_NoSource_linux_x64.zip
# ADD https://github.com/nopSolutions/nopCommerce/releases/download/release-4.60.2/nopCommerce_4.60.2_NoSource_linux_x64.zip /somanath/
ARG HOME_DIR=/somanath
# WORKDIR /somanath
WORKDIR ${HOME_DIR}
ADD ${DOWNLOAD_URL} ${HOME_DIR}
RUN apt update && apt install unzip -y && \
    unzip ${HOME_DIR}/nopCommerce_4.60.2_NoSource_linux_x64.zip && \
    mkdir ${HOME_DIR}/bin && mkdir ${HOME_DIR}/logs
EXPOSE 5000
ENV ASPNETCORE_URLS="http://0.0.0.0:5000"
CMD ["dotnet","Nop.Web.dll"]

#[Refer Here](https://github.com/SHIVASOMANATH/DOCKER/commit/353767a9f81357e2e52e565f042ff9fef451b7880)
 
# 11) Docker file for multi stage and notrrot user permission with assign volume

FROM alpine/git AS vcs
RUN mkdir spc \
    cd /spc && \
    git clone https://github.com/spring-projects/spring-petclinic.git /spc && \
    pwd && ls
FROM maven:3.9.4-amazoncorretto-17 AS builder
COPY --from=vcs /spc /spc
RUN ls /spc
RUN cd /spc && mvn package


FROM openjdk:17-alpine
LABEL author="somaath",director="boaz"
ARG HOME_DIR=/petclinic
WORKDIR ${HOME_DIR}
VOLUME ${HOME_DIR}
ARG user=spring
ARG group=spring
ARG uid=1000
ARG gid=1000
RUN adduser -h ${HOME_DIR} -s /bin/sh -D ${user} && \
    chown ${user}:${group} ${HOME_DIR}
USER ${user}
COPY --from=builder /spc/target/spring-*.jar ${HOME_DIR}/spring-*.jar
EXPOSE 8080
CMD ["java","-jar","spring-*.jar"]

                                                                 